<?xml version="1.0" encoding="UTF-8"?>
<!--

    Most of the code in the Qalingo project is copyrighted Hoteia and licensed
    under the Apache License Version 2.0 (release version 0.8.0)
            http://www.apache.org/licenses/LICENSE-2.0

                      Copyright (c) Hoteia, 2012-2014
    http://www.hoteia.com - http://twitter.com/hoteia - contact@hoteia.com


-->
<beans xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:p="http://www.springframework.org/schema/p"
	    xmlns:context="http://www.springframework.org/schema/context" 
	    xmlns:task="http://www.springframework.org/schema/task"
		xmlns:tx="http://www.springframework.org/schema/tx"
	    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd">

	<!--
	<tx:annotation-driven mode="aspectj" transaction-manager="transactionManager" />
	-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<context:annotation-config />

    <task:annotation-driven />
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="bq-persistence" />
		<property name="jpaVendorAdapter">
			<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${hibernate.generateddl}" />
				<property name="showSql" value="${hibernate.showsql}" />
				<property name="databasePlatform" value="${hibernate.dialect}" />
			</bean>
		</property>
        <!--   
		<property name="jpaProperties">
			<props>  
                <prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop> 
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
                <prop key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> 
                <prop key="hibernate.generateddl">${hibernate.generateddl}</prop> 
            </props>  
		</property>
<property name="jpaProperties">
            <props>
                <prop key="hibernate.connection.provider_class">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">verify</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.c3p0.acquire_increment">1</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">5000</prop>
                <prop key="hibernate.c3p0.max_statements">100</prop>
                <prop key="hibernate.c3p0.idle_test_period">3000</prop>
                <prop key="hibernate.c3p0.testConnectionOnCheckout">true</prop>
                <prop key="hibernate.c3p0.acquireRetryAttempts">1</prop>
            </props>
        </property>
        
        <property name="jpaProperties">
	        <props>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop>

				<prop key="bonecp.idleMaxAge">${bonecp.idleMaxAge}</prop>
				<prop key="bonecp.idleConnectionTestPeriod">${bonecp.idleConnectionTestPeriod}</prop>
				<prop key="bonecp.partitionCount">${bonecp.partitionCount}</prop>
				<prop key="bonecp.acquireIncrement">${bonecp.acquireIncrement}</prop>
				<prop key="bonecp.maxConnectionsPerPartition">${bonecp.maxConnectionsPerPartition}</prop>
				<prop key="bonecp.minConnectionsPerPartition">${bonecp.minConnectionsPerPartition}</prop>
				<prop key="bonecp.statementsCacheSize">${bonecp.statementsCacheSize}</prop>
				<prop key="bonecp.releaseHelperThreads">${bonecp.releaseHelperThreads}</prop>
	        </props>
        </property>
        -->
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="packagesToScan" value="org.hoteia.qalingo.core.domain" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.showsql}</prop>
            </props>
        </property>
    </bean>
     -->
     
</beans>