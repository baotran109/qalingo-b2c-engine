<?xml version="1.0" ?>
<!--

    Most of the code in the Qalingo project is copyrighted Hoteia and licensed
    under the Apache License Version 2.0 (release version 0.8.0)
            http://www.apache.org/licenses/LICENSE-2.0

                      Copyright (c) Hoteia, 2012-2014
    http://www.hoteia.com - http://twitter.com/hoteia - contact@hoteia.com


-->
<schema name="product-sku" version="1.1">
	<types>
		<fieldtype name="string"  		class="solr.StrField" sortMissingLast="true" omitNorms="true" />
		<fieldType name="boolean" 		class="solr.BoolField" sortMissingLast="true"/>
		<fieldType name="int"			class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="float"			class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="long"			class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="double"		class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="date"			class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
		<fieldType name="text_general"	class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
		<fieldtype name="priceclass"	class="solr.TextField">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="^([0-9]{0,2})([\.,][0-9]{1,2})?$" replacement="0 - 99" replace="all" />
				<filter class="solr.PatternReplaceFilterFactory" pattern="^(1[0-9][0-9]|2[0-4][0-9]|)([\.,][0-9]{1,2})?$" replacement="100 - 249" replace="all" />
				<filter class="solr.PatternReplaceFilterFactory" pattern="^(2[5-9][0-9]|[3-4][0-9][0-9])([\.,][0-9]{1,2})?$" replacement="250 - 499" replace="all" />
				<filter class="solr.PatternReplaceFilterFactory" pattern="^([5-9][0-9][0-9])([\.,][0-9]{1,2})?$" replacement="500 - 999" replace="all" />
				<filter class="solr.PatternReplaceFilterFactory" pattern="^([0-9]{4,5})([\.,][0-9]{1,2})?$" replacement="999 -" replace="all" />
			</analyzer>
		</fieldtype> 
	</types>

	<fields>   
		<!-- general -->
		<field name="id"					type="long"   		indexed="true"  stored="true"  multiValued="false" required="true" />
		<field name="code"					type="string"   	indexed="true"  stored="true" />
		<field name="name"					type="string"       indexed="true"  stored="true"  multiValued="false" />
		<field name="description"			type="string"   	indexed="true"  stored="true"  multiValued="false" />
		<field name="catalogCode"			type="string"		indexed="true" 	stored="true"  multiValued="true" />
		<field name="defaultCategoryCode"	type="string"   	indexed="true"  stored="true"  multiValued="false" />

		<field name="datecreate"			type="date"			indexed="true"  stored="true"  multiValued="false" />
		<field name="dateupdate"			type="date"			indexed="true"  stored="true"  multiValued="false" />
		
		<field name="price"					type="string"   	indexed="true"  stored="true"  multiValued="false" />
		<field name="price_s"				type="priceclass"	indexed="true"  stored="true"  multiValued="false" />
		
		<field name="text"					type="text_general" indexed="true" 	stored="false" multiValued="true" />
		<field name="_version_" 			type="long" 		indexed="true" 	stored="true"/>
   </fields>

	<!-- field to use to determine and enforce document uniqueness. -->
	<uniqueKey>id</uniqueKey>

	<!-- field for the QueryParser to use when an explicit fieldname is absent -->
	<defaultSearchField>text</defaultSearchField>

	<copyField source="name"			dest="text" />
	<copyField source="description"		dest="text" />
	<copyField source="code"			dest="text" />
	<copyField source="price"			dest="price_s" />
   
	<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
	<solrQueryParser defaultOperator="OR" />
</schema>

